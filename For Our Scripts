local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "CrownCheats - (Driving Empire Script)  ",
    SubTitle = "By ashy1828, monstraa",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

-- Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "archive-restore" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "üëë CrownCheats üëë",
        SubContent = "Driving Empire", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })

    Tabs.Main:AddParagraph({
        Title = "Welcome to The Driving Empire Script‚ùó",
        Content = "By ashy1828, And a Tiny Bit of monstraa"
    })

    Tabs.Settings:AddParagraph({
        Title = "üåê Credits & Info üåê",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "üëë Crown Cheats üëë",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "üìù Script üìù : Driving Empire",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "By : ashy1828, monstra",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "UI : Fluent",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "v1.0.2",
        Content = ""
    })
end

-- Add toggles for Auto Farm and Anti AFK
local AutoFarmToggle = Tabs.Main:AddToggle("NameToggle", {
    Title = "Name",
    Default = false
})

AutoFarmToggle:OnChanged(function(val)
    -- Handle Auto Farm Toggle change
    print("Message", val)
end)

local AntiAfkToggle = Tabs.Main:AddToggle("NameToggle", {
    Title = "Name",
    Default = false
})

AntiAfkToggle:OnChanged(function(val)
    -- Handle Anti AFK Toggle change
    print("Message", val)
end)

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface management system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we don't want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- Use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Crown Cheats",
    Content = "Driving Empire Script Has Loaded Successfully!",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
